import 'package:flutter/material.dart';import 'package:flutter/widgets.dart';import 'Assignment10/CommonClass/CommonAppBar.dart';import 'Assignment10/CommonClass/CommonDrawer.dart';class Assignment7 extends StatefulWidget {  const Assignment7({Key? key}) : super(key: key);  @override  _Assignment7State createState() => _Assignment7State();}class _Assignment7State extends State<Assignment7> {  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: CommonAppBar(        title: "Layout Demo",      ),      drawer: CommonDrawer(),      body: Container(        margin: EdgeInsets.symmetric(horizontal: 5, vertical: 5),        child: Column(          children: <Widget>[            SizedBox(width: 20, height: 20),            Row(              mainAxisAlignment: MainAxisAlignment.spaceAround,              children: [                ElevatedButton(                  style: ElevatedButton.styleFrom(                      fixedSize: Size(MediaQuery.of(context).size.width * 0.45, 100), primary: Colors.brown),                  onPressed: () {},                  child: const Text(''),                ),                ElevatedButton(                  style: ElevatedButton.styleFrom(                      fixedSize: Size(MediaQuery.of(context).size.width * 0.45, 100), primary: Colors.green),                  onPressed: () {},                  child: const Text(''),                ),              ],            ),            SizedBox(width: 20, height: 20),            Row(              mainAxisAlignment: MainAxisAlignment.spaceEvenly,              mainAxisSize: MainAxisSize.max,              children: [                ElevatedButton(                  style: ElevatedButton.styleFrom(                      fixedSize: Size(MediaQuery.of(context).size.width * 0.30, 70), primary: Colors.blue),                  onPressed: () {},                  child: const Text(''),                ),                ElevatedButton(                  style: ElevatedButton.styleFrom(                      fixedSize: Size(MediaQuery.of(context).size.width * 0.30, 70), primary: Colors.cyan),                  onPressed: () {},                  child: const Text(''),                ),                ElevatedButton(                  style: ElevatedButton.styleFrom(                      fixedSize: Size(MediaQuery.of(context).size.width * 0.30, 70), primary: Colors.red),                  onPressed: () {},                  child: const Text(''),                ),              ],            ),            SizedBox(width: 20, height: 20),            Row(              mainAxisAlignment: MainAxisAlignment.spaceEvenly,              mainAxisSize: MainAxisSize.max,              children: [                ElevatedButton(                  style: ElevatedButton.styleFrom(                      fixedSize: Size(MediaQuery.of(context).size.width * 0.63, 70), primary: Colors.deepPurple),                  onPressed: () {},                  child: const Text(''),                ),                ElevatedButton(                  style: ElevatedButton.styleFrom(                      fixedSize: Size(MediaQuery.of(context).size.width * 0.30, 70), primary: Colors.amberAccent),                  onPressed: () {},                  child: const Text(''),                ),              ],            ),            SizedBox(height: 40),            Row(              mainAxisAlignment: MainAxisAlignment.spaceBetween,              crossAxisAlignment: CrossAxisAlignment.baseline,              textBaseline: TextBaseline.alphabetic,              children: <Widget>[                Text("TEXT", style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 36)),                Text("TEXT", style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 18)),                Text("TEXT", style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 36))              ],            ),            Divider(              color: Colors.green,              thickness: 1,            ),            SizedBox(height: 30),            Container(                alignment: Alignment.centerLeft,                child: Text("TEXT", style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 36))),            SizedBox(height: 30),            Row(              mainAxisSize: MainAxisSize.max,              mainAxisAlignment: MainAxisAlignment.spaceBetween,              crossAxisAlignment: CrossAxisAlignment.baseline,              textBaseline: TextBaseline.alphabetic,              children: <Widget>[                buildItem(Colors.white, 18, Alignment.centerLeft),                buildItem(Colors.white, 36, Alignment.center),                buildItem(Colors.white, -1, Alignment.centerLeft),              ],            ),            Row(              mainAxisSize: MainAxisSize.max,              mainAxisAlignment: MainAxisAlignment.spaceBetween,              crossAxisAlignment: CrossAxisAlignment.baseline,              textBaseline: TextBaseline.alphabetic,              children: <Widget>[                buildItem(Colors.white, -1, Alignment.center),                buildItem(Colors.white, 18, Alignment.bottomRight),                buildItem(Colors.white, 36, Alignment.centerRight),              ],            ),            Container(                height: 50,                alignment: Alignment.centerRight,                child: Text("TEXT", style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 18))),          ],        ),      ),    );  }  Widget buildItem(Color color, double fontSize, Alignment alignment) {    return Expanded(      child: Container(        height: 10,        color: Colors.transparent,        child: FittedBox(          fit: BoxFit.none,          alignment: alignment,          child: Text(            "TEXT",            textAlign: TextAlign.center,            style: TextStyle(fontWeight: FontWeight.bold, fontSize: fontSize),          ),        ),      ),    );  }}